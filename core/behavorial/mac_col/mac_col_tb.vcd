$date
	Tue Mar  4 21:45:17 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module mac_col_tb $end
$var wire 64 ! q_out_1 [63:0] $end
$var wire 64 " q_out_0 [63:0] $end
$var wire 32 # out_1 [31:0] $end
$var wire 32 $ out_0 [31:0] $end
$var wire 2 % o_inst_1 [1:0] $end
$var wire 2 & o_inst_0 [1:0] $end
$var wire 1 ' fifo_wr_1 $end
$var wire 1 ( fifo_wr_0 $end
$var reg 64 ) a [63:0] $end
$var reg 64 * b [63:0] $end
$var reg 1 + clk $end
$var reg 2 , i_inst [1:0] $end
$var reg 64 - q_in [63:0] $end
$var reg 1 . reset $end
$scope module mac_col_instance_0 $end
$var wire 1 + clk $end
$var wire 2 / i_inst [1:0] $end
$var wire 2 0 o_inst [1:0] $end
$var wire 32 1 out [31:0] $end
$var wire 64 2 q_in [63:0] $end
$var wire 64 3 q_out [63:0] $end
$var wire 1 . reset $end
$var wire 32 4 psum [31:0] $end
$var wire 1 ( fifo_wr $end
$var reg 4 5 cnt_q [3:0] $end
$var reg 2 6 inst_2q [1:0] $end
$var reg 2 7 inst_q [1:0] $end
$var reg 64 8 key_q [63:0] $end
$var reg 1 9 load_ready_q $end
$var reg 64 : query_q [63:0] $end
$scope module mac_8in_instance $end
$var wire 64 ; a [63:0] $end
$var wire 64 < b [63:0] $end
$var wire 16 = product7 [15:0] $end
$var wire 16 > product6 [15:0] $end
$var wire 16 ? product5 [15:0] $end
$var wire 16 @ product4 [15:0] $end
$var wire 16 A product3 [15:0] $end
$var wire 16 B product2 [15:0] $end
$var wire 16 C product1 [15:0] $end
$var wire 16 D product0 [15:0] $end
$var wire 19 E out [18:0] $end
$upscope $end
$upscope $end
$scope module mac_col_instance_1 $end
$var wire 1 + clk $end
$var wire 2 F i_inst [1:0] $end
$var wire 2 G o_inst [1:0] $end
$var wire 32 H out [31:0] $end
$var wire 64 I q_in [63:0] $end
$var wire 64 J q_out [63:0] $end
$var wire 1 . reset $end
$var wire 32 K psum [31:0] $end
$var wire 1 ' fifo_wr $end
$var reg 4 L cnt_q [3:0] $end
$var reg 2 M inst_2q [1:0] $end
$var reg 2 N inst_q [1:0] $end
$var reg 64 O key_q [63:0] $end
$var reg 1 P load_ready_q $end
$var reg 64 Q query_q [63:0] $end
$scope module mac_8in_instance $end
$var wire 64 R a [63:0] $end
$var wire 64 S b [63:0] $end
$var wire 16 T product7 [15:0] $end
$var wire 16 U product6 [15:0] $end
$var wire 16 V product5 [15:0] $end
$var wire 16 W product4 [15:0] $end
$var wire 16 X product3 [15:0] $end
$var wire 16 Y product2 [15:0] $end
$var wire 16 Z product1 [15:0] $end
$var wire 16 [ product0 [15:0] $end
$var wire 19 \ out [18:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
xP
bx O
bx N
bx M
bx L
b0xxxxxxxxxxxxxxxxxxx K
bx J
bx I
b0xxxxxxxxxxxxxxxxxxx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
x9
bx 8
bx 7
bx 6
bx 5
b0xxxxxxxxxxxxxxxxxxx 4
bx 3
b0 2
b0xxxxxxxxxxxxxxxxxxx 1
bx 0
b0 /
1.
b0 -
b0 ,
0+
b0 *
b0 )
x(
x'
bx &
bx %
b0xxxxxxxxxxxxxxxxxxx $
b0xxxxxxxxxxxxxxxxxxx #
bx "
bx !
$end
#1000
0(
0'
b0 6
b0 &
b0 0
b0 F
b0 7
19
b0 5
b0 M
b0 %
b0 G
b0 N
1P
b0 L
1+
#2000
0.
0+
#3000
1+
#4000
b1 ,
b1 /
0+
#5000
b1 &
b1 0
b1 F
b1 7
1+
#6000
b100000010000000110000010000000101000001100000011100001000 -
b100000010000000110000010000000101000001100000011100001000 2
0+
#7000
b11001100 $
b11001100 1
b11001100 4
b11001100 E
b1000000 D
b110001 C
b100100 B
b11001 A
b10000 @
b1001 ?
b100 >
b1 =
b1 %
b1 G
b1 N
09
b100000010000000110000010000000101000001100000011100001000 8
b100000010000000110000010000000101000001100000011100001000 <
b100000010000000110000010000000101000001100000011100001000 "
b100000010000000110000010000000101000001100000011100001000 3
b100000010000000110000010000000101000001100000011100001000 I
b100000010000000110000010000000101000001100000011100001000 :
b100000010000000110000010000000101000001100000011100001000 ;
b1 6
1+
#8000
b100000011000001010000011100001001000010110000110100001111 -
b100000011000001010000011100001001000010110000110100001111 2
0+
#9000
b101110100 $
b101110100 1
b101110100 4
b101110100 E
b1111000 D
b1011011 C
b1000010 B
b101101 A
b11100 @
b1111 ?
b110 >
b100000011000001010000011100001001000010110000110100001111 "
b100000011000001010000011100001001000010110000110100001111 3
b100000011000001010000011100001001000010110000110100001111 I
b100000011000001010000011100001001000010110000110100001111 :
b100000011000001010000011100001001000010110000110100001111 ;
b1 L
b100000010000000110000010000000101000001100000011100001000 !
b100000010000000110000010000000101000001100000011100001000 J
b100000010000000110000010000000101000001100000011100001000 Q
b100000010000000110000010000000101000001100000011100001000 R
b1 M
1+
#10000
b0 ,
b0 /
0+
#11000
b1010101000 #
b1010101000 H
b1010101000 K
b1010101000 \
b11100001 [
b10101001 Z
b1111001 Y
b1010001 X
b110001 W
b11001 V
b1001 U
b1 T
0P
b100000011000001010000011100001001000010110000110100001111 O
b100000011000001010000011100001001000010110000110100001111 S
b100000011000001010000011100001001000010110000110100001111 !
b100000011000001010000011100001001000010110000110100001111 J
b100000011000001010000011100001001000010110000110100001111 Q
b100000011000001010000011100001001000010110000110100001111 R
b0 &
b0 0
b0 F
b0 7
1+
#12000
0+
#13000
b0 6
b0 %
b0 G
b0 N
1+
#14000
0+
#16000
